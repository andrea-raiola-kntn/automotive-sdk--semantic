name: Publish .aar

on:
  workflow_run:
    workflows: ["Semantic Version"]
    types: [completed]
    branches:
      - main
      - next

  workflow_dispatch:

jobs:
  publish-sdk:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.workflow_run.head_branch }}

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 17

      - name: Grant execute permission to gradlew
        run: chmod +x ./gradlew

      - name: Extract flavor and assign secrets
        id: flavor
        run: |
          if [[ "${GITHUB_REF_NAME}" == "main" || "${GITHUB_REF_NAME}" == "next" ]]; then
            FLAVOR="core"
          else
            FLAVOR="${GITHUB_REF_NAME##*/}"
          fi
          
          FLAVOR_UPPER=$(echo "$FLAVOR" | tr '[:lower:]' '[:upper:]')
          
          echo "flavor=$FLAVOR" >> $GITHUB_OUTPUT
          
          #Gradle verification to sign the flavor
          echo "FLAVOR=$FLAVOR" >> $GITHUB_ENV 
          
          echo "flavor_upper=$FLAVOR_UPPER" >> $GITHUB_OUTPUT
          
          KEY_VAR="GPG_PRIVATE_KEY_${FLAVOR_UPPER}"
          PASSPHRASE_VAR="GPG_PASSPHRASE_${FLAVOR_UPPER}"
          
          GPG_PRIVATE_KEY="${!KEY_VAR}"
          GPG_PASSPHRASE="${!PASSPHRASE_VAR}"
          
          printf '%s' "$GPG_PRIVATE_KEY" > /tmp/private.key
          printf '%s' "$GPG_PASSPHRASE" > /tmp/passphrase.txt
          
          chmod 600 /tmp/private.key
          chmod 600 /tmp/passphrase.txt
        env:
          GPG_PRIVATE_KEY_CORE: ${{ secrets.GPG_PRIVATE_KEY_CORE }}
          GPG_PASSPHRASE_CORE: ${{ secrets.GPG_PASSPHRASE_CORE }}

      - name: Publish flavor ${{ steps.flavor.outputs.flavor }}
        run: |
          set -e
          
          FLAVOR="${{ steps.flavor.outputs.flavor }}"
          FLAVOR_CAP="${FLAVOR^}"
          
          echo "Publishing $FLAVOR_CAP Debug & Release"
          
          ./gradlew \
            publish${FLAVOR_CAP}DebugPublicationToGitHubPackagesRepository \
            publish${FLAVOR_CAP}ReleasePublicationToGitHubPackagesRepository \
            --stacktrace --info
          
          echo "Clean up temporary GPG files"
          rm -f /tmp/private.key /tmp/passphrase.txt
        env:
          USERNAME_GITHUB: ${{ github.actor }}
          TOKEN_GITHUB: ${{ secrets.GITHUB_TOKEN }}

  sync-main-to-develop:
    needs: publish-sdk
    if: github.ref == 'refs/heads/main' && needs.publish-sdk.result == 'success'
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v4
        with:
          ref: main
          fetch-depth: 0

      - name: Configure git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Merge main into develop
        run: |
          git fetch origin
          git checkout develop || git checkout -b develop origin/develop
          git merge main --no-edit --no-ff
          git push origin develop

#      - name: Create Pull Request from main to develop
#        uses: peter-evans/create-pull-request@v6
#        with:
#          token: ${{ secrets.GITHUB_TOKEN }}
#          base: develop
#          branch: sync/main-to-develop
#          title: "Sync main to develop after release"
#          body: |
#            This PR syncs changes from `main` into `develop`.
#          commit-message: "chore: sync main to develop after a stable release"
#          labels: sync
