name: PR Checks

on:
  pull_request:
    branches:
      - 'develop'
    types: [opened, reopened, synchronize, edited]

permissions:
  contents: read
  pull-requests: write

jobs:
  pr-checks:
    name: Code Quality, Coverage, and Unit Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 17

      - name: Grant execute permission to gradlew
        run: chmod +x ./gradlew

      # Run Detekt
      - name: Run Detekt
        id: run-detekt
        run: ./gradlew detekt

      - name: Upload Detekt Report
        uses: actions/upload-artifact@v4
        with:
          name: detekt-report
          path: '**/build/reports/detekt'

      # Run Unit Tests
      - name: Run Unit Tests
        id: run-tests
        env:
          RADIOPLAYER_USERNAME: ${{ secrets.RADIOPLAYER_USERNAME }}
          RADIOPLAYER_PASSWORD: ${{ secrets.RADIOPLAYER_PASSWORD }}
        run: ./gradlew automotive:testCoreDebugUnitTest
        continue-on-error: true

      - name: Upload Unit Test Reports
        uses: actions/upload-artifact@v4
        with:
          name: test-report
          path: '**/build/reports/tests/testCoreDebugUnitTest'

      # Run JaCoCo
      - name: Run JaCoCo and Extract %
        env:
          RADIOPLAYER_USERNAME: ${{ secrets.RADIOPLAYER_USERNAME }}
          RADIOPLAYER_PASSWORD: ${{ secrets.RADIOPLAYER_PASSWORD }}
        id: extract-coverage
        run: |
          COVERAGE_LINE=$(./gradlew clean jacocoCoverage 2>&1 | grep "Code coverage:")
          PERCENTAGE=$(echo "$COVERAGE_LINE" | sed -E 's/✔ Code coverage: ([0-9]+,[0-9]+)%.*/\1/')
          echo "percentage=$PERCENTAGE" >> $GITHUB_OUTPUT
          echo "line=$COVERAGE_LINE" >> $GITHUB_OUTPUT

      - name: Upload Coverage Report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-html-report
          path: '**/build/reports/jacoco/jacocoCoverage/html'

      # Final comment combining all results
      - name: Comment all results in one message
        if: ${{ github.event_name == 'pull_request' }}
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const detektOutcome = '${{ steps.run-detekt.outcome }}';
            const testsOutcome = '${{ steps.run-tests.outcome }}';
            const coverageLine = `${{ steps.extract-coverage.outputs.line }}`;

            const detektResult = detektOutcome === 'success'
              ? '✅ **Detekt:** passed'
              : '❌ **Detekt:** failed. See artifact for details.';

            const testResult = testsOutcome === 'success'
              ? '✅ **Unit Tests:** passed'
              : '❌ **Unit Tests:** failed. See test report.';

            const coverageResult = `📊 **Coverage:** ${coverageLine}`;

            const fullComment = [
              '### ✅ Automated PR Checks Summary',
              '',
              detektResult,
              testResult,
              coverageResult,
              '',
              '_Reports are available as uploaded artifacts._'
            ].join('\n');

            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: fullComment
            });

      # Fail if needed
      - name: Fail if Detekt or Tests Failed
        if: ${{ steps.run-tests.outcome == 'failure' || steps.run-detekt.outcome == 'failure' }}
        run: exit 1