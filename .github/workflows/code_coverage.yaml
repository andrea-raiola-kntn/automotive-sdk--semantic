name: Check Kover Coverage

on:
  pull_request:
    branches:
      - 'develop'
    types: [opened, reopened, synchronize, edited]

permissions:
  contents: read
  pull-requests: write

jobs:
  coverage-check:
    name: Covergae Check
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Grant execute permission to gradlew
        run: chmod +x ./gradlew

      - name: Run Kover tests and generate report
        run: ./gradlew koverLog

      - name: Extract code coverage
        id: extract-coverage
        run: |
          COVERAGE_LINE=$(./gradlew koverLog | grep "application line coverage")
          COVERAGE=$(echo "$COVERAGE_LINE" | sed -E 's/.*: ([0-9]+(\.[0-9]+)?)%.*/\1/')
          echo "coverage=${COVERAGE}" >> $GITHUB_OUTPUT  

      - name: Comment coverage and fail if needed
        if: ${{ github.event_name == 'pull_request' }}
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const threshold = 80;
            const coverage = parseFloat('${{ steps.extract-coverage.outputs.coverage }}');
            const below = coverage < threshold;
      
            const body = below
              ? `❌ **Code coverage is ${coverage}%**, which is below the minimum threshold of ${threshold}%.`
              : `✅ **Code coverage is ${coverage}%**, which meets the minimum threshold of ${threshold}%.`;
      
            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body
            });
      
            if (below) {
              core.setFailed(`Code coverage ${coverage}% is below threshold ${threshold}%`);
            }