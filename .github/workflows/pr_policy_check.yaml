name: PR Policy Check

on:
  pull_request_target:
    types: [opened, reopened]
    branches:
      - main
      - next
      - develop

jobs:
  pr-policy-check:
    runs-on: ubuntu-latest
    steps:
      - name: Set vars
        run: |
          echo "BASE=${{ github.base_ref }}" >> $GITHUB_ENV
          echo "HEAD=${{ github.head_ref }}" >> $GITHUB_ENV

      - name: Validate source branch name
        id: validate
        run: |
          BASE="${{ github.base_ref }}"
          HEAD="${{ github.head_ref }}"
          VALID=false

          case "$BASE" in
            main)
              if [[ "$HEAD" == "next" || "$HEAD" == hotfix/* ]]; then VALID=true; fi
              ;;
            next)
              if [[ "$HEAD" == "develop" || "$HEAD" == hotfix/* ]]; then VALID=true; fi
              ;;
            develop)
              if [[ "$HEAD" == feature/* || "$HEAD" == bugfix/* || "$HEAD" == hotfix/* || "$HEAD" == dependabot/gradle/* ]]; then VALID=true; fi
              ;;
          esac

          echo "VALID=$VALID" >> $GITHUB_ENV

      - name: Comment on invalid PR
        if: env.VALID == 'false'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const base = process.env.BASE;
            const head = process.env.HEAD;
            let message = "";

            if (base === "main") {
              message = `PRs into \`main\` are only allowed from \`next\` or \`hotfix/*\`. This PR is from \`${head}\`.`;
            } else if (base === "develop") {
              message = `PRs into \`develop\` are only allowed from \`feature/*\`, \`bugfix/*\`, or \`hotfix/*\`. This PR is from \`${head}\`.`;
            } else if (base === "next") {
              message = `PRs into \`next\` are only allowed from \`develop\` or \`hotfix/*\`. This PR is from \`${head}\`.`;
            } else {
              message = `This PR does not follow the branch naming rules.`;
            }

            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: message
            });

      - name: Fail job on invalid branch
        if: env.VALID == 'false'
        run: |
          echo "Invalid source branch for target '${{ github.base_ref }}'"
          exit 1
